{"version":3,"file":"chartist-plugin-sketchy.min.js","sources":["chartist-plugin-sketchy.js"],"names":["root","factory","define","amd","returnExportsGlobal","exports","module","this","window","document","Chartist","defaultOptions","filterPrefix","filterType","filterBaseFrequency","filterNumOctaves","filterScale","overrides","plugins","ctSketchy","options","extend","chart","on","data","defs","svg","elem","baseFilter","id","type","baseFrequency","numOctaves","result","join","xChannelSelector","yChannelSelector","in","in2","scale","Object","keys","forEach","overrideKey","override","overrideFilter","filterName","filterAttributes","filter","group","attr","element"],"mappings":";;;;;;CAAC,SAAUA,EAAMC,GACO,kBAAXC,SAAyBA,OAAOC,IAEzCD,UAAW,WACT,MAAQF,GAAKI,oBAAsBH,MAET,gBAAZI,SAIhBC,OAAOD,QAAUJ,IAEjBD,EAAK,8BAAgCC,KAEvCM,KAAM,WA8FN,MAvFC,UAASC,EAAQC,EAAUC,GAC1B,YAEA,IAAIC,IACFC,aAAc,kBACdC,WAAY,eACZC,oBAAqB,IACrBC,iBAAkB,EAClBC,YAAa,EACbC,aAGFP,GAASQ,QAAUR,EAASQ,YAC5BR,EAASQ,QAAQC,UAAY,SAASC,GAIpC,MAFAA,GAAUV,EAASW,UAAWV,EAAgBS,GAEvC,SAAuBE,GAE5BA,EAAMC,GAAG,UAAW,SAASC,GAC3B,GAAIC,GAAOD,EAAKE,IAAIC,KAAK,QACvBC,EAAaH,EAAKE,KAAK,UACrBE,GAAIT,EAAQR,cAGhBgB,GAAWD,KAAK,gBACdG,KAAMV,EAAQP,WACdkB,cAAeX,EAAQN,oBACvBkB,WAAYZ,EAAQL,iBACpBkB,QAASb,EAAQR,aAAc,cAAcsB,KAAK,MAGpDN,EAAWD,KAAK,qBACdQ,iBAAkB,IAClBC,iBAAkB,IAClBC,KAAI,gBACJC,KAAMlB,EAAQR,aAAc,cAAcsB,KAAK,IAC/CK,MAAOnB,EAAQJ,cAGjBwB,OAAOC,KAAKrB,EAAQH,WAAWyB,QAAQ,SAASC,GAC9C,GAAIC,GAAWxB,EAAQH,UAAU0B,EAEjC,IAAGC,KAAa,EAAhB,CAIA,GAAIC,GAAiBpB,EAAKE,KAAK,UAC7BE,IAAKT,EAAQR,aAAc+B,GAAaT,KAAK,KAG/CW,GAAelB,KAAK,gBAClBG,KAAMc,EAASd,MAAQV,EAAQP,WAC/BkB,cAAea,EAASb,eAAiBX,EAAQN,oBACjDkB,WAAYY,EAASZ,YAAcZ,EAAQL,iBAC3CkB,QAASb,EAAQR,aAAc+B,EAAa,cAAcT,KAAK,MAGjEW,EAAelB,KAAK,qBAClBQ,iBAAkB,IAClBC,iBAAkB,IAClBC,KAAI,gBACJC,KAAMlB,EAAQR,aAAc+B,EAAa,cAAcT,KAAK,IAC5DK,MAAOK,EAASL,OAASnB,EAAQJ,mBAKvCM,EAAMC,GAAG,OAAQ,SAASC,GACxB,GAAGJ,EAAQH,UAAUO,EAAKM,SAAU,EAAO,CACzC,GAAIgB,GAAa1B,EAAQH,UAAUO,EAAKM,OAASV,EAAQR,aAAcY,EAAKM,MAAMI,KAAK,IAAMd,EAAQR,aACnGmC,GACEC,QAAS,QAASF,EAAY,KAAKZ,KAAK,IAG3B,WAAdV,EAAKM,KACNN,EAAKyB,MAAMC,KAAKH,GAEhBvB,EAAK2B,QAAQD,KAAKH,SAO5BvC,OAAQC,SAAUC,UAEbA,SAASQ,QAAQC","sourcesContent":["(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], function () {\n      return (root.returnExportsGlobal = factory());\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    root['Chartist.plugins.ctSketchy'] = factory();\n  }\n}(this, function () {\n\n  /**\n   * Chartist.js plugin to render sketchy charts that look hand drawn using SVG filters.\n   *\n   */\n  /* global Chartist */\n  (function(window, document, Chartist) {\n    'use strict';\n\n    var defaultOptions = {\n      filterPrefix: 'ctSketchyFilter',\n      filterType: 'fractalNoise',\n      filterBaseFrequency: 0.05,\n      filterNumOctaves: 2,\n      filterScale: 5,\n      overrides: {}\n    };\n\n    Chartist.plugins = Chartist.plugins || {};\n    Chartist.plugins.ctSketchy = function(options) {\n\n      options = Chartist.extend({}, defaultOptions, options);\n\n      return function ctPointLabels(chart) {\n\n        chart.on('created', function(data) {\n          var defs = data.svg.elem('defs'),\n            baseFilter = defs.elem('filter', {\n              id: options.filterPrefix\n            });\n\n          baseFilter.elem('feTurbulence', {\n            type: options.filterType,\n            baseFrequency: options.filterBaseFrequency,\n            numOctaves: options.filterNumOctaves,\n            result: [options.filterPrefix, 'Turbulence'].join('')\n          });\n\n          baseFilter.elem('feDisplacementMap', {\n            xChannelSelector: 'R',\n            yChannelSelector: 'G',\n            in: 'SourceGraphic',\n            in2: [options.filterPrefix, 'Turbulence'].join(''),\n            scale: options.filterScale\n          });\n\n          Object.keys(options.overrides).forEach(function(overrideKey) {\n            var override = options.overrides[overrideKey];\n\n            if(override === false) {\n              return;\n            }\n\n            var overrideFilter = defs.elem('filter', {\n              id: [options.filterPrefix, overrideKey].join('')\n            });\n\n            overrideFilter.elem('feTurbulence', {\n              type: override.type || options.filterType,\n              baseFrequency: override.baseFrequency || options.filterBaseFrequency,\n              numOctaves: override.numOctaves || options.filterNumOctaves,\n              result: [options.filterPrefix, overrideKey, 'Turbulence'].join('')\n            });\n\n            overrideFilter.elem('feDisplacementMap', {\n              xChannelSelector: 'R',\n              yChannelSelector: 'G',\n              in: 'SourceGraphic',\n              in2: [options.filterPrefix, overrideKey, 'Turbulence'].join(''),\n              scale: override.scale || options.filterScale\n            });\n          });\n        });\n\n        chart.on('draw', function(data) {\n          if(options.overrides[data.type] !== false) {\n            var filterName = options.overrides[data.type] ? [options.filterPrefix, data.type].join('') : options.filterPrefix,\n              filterAttributes = {\n                filter: ['url(#', filterName, ')'].join('')\n              };\n\n            if(data.type === 'label') {\n              data.group.attr(filterAttributes);\n            } else {\n              data.element.attr(filterAttributes);\n            }\n          }\n        });\n      };\n    };\n\n  }(window, document, Chartist));\n\n  return Chartist.plugins.ctSketchy;\n\n}));\n"]}